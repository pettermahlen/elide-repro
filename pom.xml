<project>
  <modelVersion>4.0.0</modelVersion>

  <name>elide-repro</name>
  <groupId>com.spotify</groupId>
  <artifactId>elide-repro</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <apollo.version>1.3.0</apollo.version>
    <apollo.runner>com.spotify.repro.ServiceRunner</apollo.runner>
    <jacoco.minimum-coverage>0.80</jacoco.minimum-coverage>
    <maven.deploy.skip>true</maven.deploy.skip>
    <maven.install.skip>true</maven.install.skip>
    <mysql-connector-java.version>5.1.39</mysql-connector-java.version>
    <elide.version>2.4.0</elide.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.spotify</groupId>
        <artifactId>apollo-bom</artifactId>
        <version>${apollo.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- ensure that using helios-testing at test scope does not cause Maven to change
      com.typesafe:config from compile to test as otherwise it will be left out of the final package
      and the service will not work
      -->
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>1.2.1</version>
        <scope>compile</scope>
      </dependency>
     </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.spotify</groupId>
      <artifactId>apollo-http-service</artifactId>
    </dependency>
    <dependency>
      <groupId>com.spotify</groupId>
      <artifactId>logging</artifactId>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>2.4.7</version>
    </dependency>
    <dependency>
      <groupId>com.yahoo.elide</groupId>
      <artifactId>elide-core</artifactId>
      <version>${elide.version}</version>
    </dependency>
    <dependency>
      <groupId>com.yahoo.elide</groupId>
      <artifactId>elide-datastore-hibernate5</artifactId>
      <version>${elide.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-hikaricp</artifactId>
      <version>5.0.2.Final</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector-java.version}</version>
    </dependency>

    <dependency>
      <groupId>com.spotify</groupId>
      <artifactId>apollo-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>3.0.0</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <compilerArgs>
            <compilerArg>-Xlint:all</compilerArg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <useBaseVersion>false</useBaseVersion>
          <overWriteReleases>false</overWriteReleases>
          <overWriteSnapshots>true</overWriteSnapshots>
          <includeScope>runtime</includeScope>
          <outputDirectory>${project.build.directory}/lib</outputDirectory>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>create-timestamp</id>
            <phase>validate</phase>
            <goals>
              <goal>create-timestamp</goal>
            </goals>
            <configuration>
              <timezone>UTC</timezone>
              <timestampFormat>yyyyMMdd'T'HHmmss</timestampFormat>
              <timestampPropertyName>buildTimestamp</timestampPropertyName>
            </configuration>
          </execution>
          <execution>
            <id>create-revision</id>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
              <doCheck>false</doCheck>
              <doUpdate>false</doUpdate>
              <shortRevisionLength>7</shortRevisionLength>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <archive>
            <addMavenDescriptor>true</addMavenDescriptor>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>${apollo.runner}</mainClass>
            </manifest>
            <manifestEntries>
              <X-Spotify-Apollo-Version>${apollo.version}</X-Spotify-Apollo-Version>
              <Implementation-Version>${buildNumber}-${buildTimestamp}</Implementation-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.4.201502262128</version>
            <configuration>
              <excludes>
                <exclude>**/*Builder.*</exclude>
                <exclude>**/*Value.*</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${jacoco.minimum-coverage}</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
